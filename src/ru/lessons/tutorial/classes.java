package ru.lessons.tutorial;

public final class classes { //public может быть только один, имя класса совпадает с именем файла, final - от него не наследуются классы, финальный в наследовании
    private final int value; //поле класса, состоит из модификатора доступа, типа поля и его имени, final - значение полю можно присвоить 1 раз, после этого менять нельзя
    //если в классе не объявляется ни один конструктор - то неявно создается конструктор по-умолчанию без параметров с м. доступа как у класса
    public classes(int value) { //конструктор, состоит из м. доступа и имени класса (ru.lessons.tutorial.classes)
        this.value=value; //если у параметра конструктора то же имя, что и у поля класса, то к полю можно обратиться this
    } //можно запретить создание экземпляров класса, сделав конструктор private

    public int intValue() { //метод, состоит из м.доступа, типа возвращ. значения (или void) и имени метода
        return value; //метод создаётся для экземпляра и может использовать его поле
    } //метод может быть final, это значит, что он не может быть переопределён в классах-наследниках, но в данном случае класс уже final, можно тут не прописывать
}
class test1{ //уже без public, но это тоже верхний уровень
    //можно делать несколько конструкторов
    test1(String val) {
        this(val, 10);
    }
    test1(String val, int radix) {}
}